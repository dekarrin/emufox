#!/bin/bash

show_usage()
{	[ -n "$1" ] && printf -v indent "%-${1}s";
	firstl="$indent"
	[ -n "$2" ] && printf -v firstl "%-${1}s" "$2";
	cat <<ENDUSAGE
${firstl}vm-stop [-h] PROFILE
ENDUSAGE
}

err_usage()
{
	show_usage 8 "usage:" >&2
	exit 1
}

show_help()
{
	show_usage
	cat <<ENDHELP

Stops all instances of a virtual machine profile

Arguments:
  PROFILE
      The name of the profile to stop. All instances of that profile are
      immediately halted.

Options:
  -h
      Show this help.
ENDHELP
	exit 0
}

parse_args()
{
	export OPTIND=1 # reset and export so subshells see it
	while [ $# -ge 1 ]
	do
		while getopts ":h" opt
		do
			case $opt in
				h)
					show_help;;
				\?|:)
					err_usage;;
			esac
		done
		shift $(expr $OPTIND \- 1)
		cmdargs=("${cmdargs[@]}" $1)
		shift 1
		OPTIND=1
	done
	if [ ${#cmdargs[@]} -lt 1 ]
	then
		show_usage >&2
		exit 1
	else
		arg_profile="${cmdargs[0]}"
		run_count=0
		for f in "$EMUFOX_HOME/.vminfo/$arg_profile-"*
		do
			[ "$f" = "$EMUFOX_HOME/.vminfo/$arg_profile-*" ] && break
			(( run_count++ ))
		done
		if [ $run_count -eq 0 ]
		then
			echo "error: no instances of profile '$arg_profile' are running" >&2
			exit 2
		fi
	fi
}

if [ -z ${EMUFOX_HOME+x} ]
then
	export EMUFOX_HOME=$(realpath "$(dirname "$(realpath "$0")")/..")
fi

. $EMUFOX_HOME/emufox.conf

arg_profile=

parse_args "$@"

[ $(id -u) = "0" ] || { echo "error: root permissions required" >&2; exit 6; }

"$_dir_scripts/vm-status" -s -o pid -o statfile "$arg_profile" | while read line
do
	pid=$(echo $line | cut -d ':' -f 1)
	infofile=$(echo $line | cut -d ':' -f 2)
	kill $pid && rm -f "$EMUFOX_HOME/.vminfo/$infofile"
done
